# Makefile. If you change it, remember than in makefiles multiple spaces
# ARE NOT EQUIVALENT to tabs. The line after a rule starts with a tab!




MODULES = 0_orig
SRC_DIR = $(MODULES)
BUILD_DIR = $(MODULES)

SRC = $(foreach sdir, $(MODULES), $(*.c) )
OBJ = $(patsubst %.c, %.o, $(SRC) )

vpath %.c $(SRC_DIR)
#Add any executable you want to be created here.
EXECUTABLES_O0	= 0_orig_O0 
EXECUTABLES_FAST = 0_orig_fast 

#This is the compiler to use
CC = icc

#These are the flags passed to the compiler. Change accordingly
CFLAGS_O0 = -Wall -O0
CFLAGS_FAST = -Wall -fast

#These are the flags passed to the linker. Nothing in our case
LDFLAGS = -lm



# my make
define make-goal: $(EXECUTABLES_FAST)
%: %.c
	$(CC) $(CFLAGS_FAST) $< -o $@ $(LDFLAGS)
endef

.PHONY: all checkdirs clean

	
# make all will create all executables
#all: $(EXECUTABLES_FAST) 

# This is the rule to create any executable from the corresponding .c 
# file with the same name.

# make clean will remove all executables, jpg files and the 
# output of previous executions.
clean:
	rm -f $(EXECUTABLES) *.jpg output_sobel.grey


all:
	$(foreach bdir,$(BUILD_DIR),$(eval $(call make-goal,$(bdir))))

# make image will create the output_sobel.jpg from the output_sobel.grey. 
# Remember to change this rule if you change the name of the output file.
image: output_sobel.grey
	convert -depth 8 -size 4096x4096 GRAY:output_sobel.grey output_sobel.jpg 

